Hej

Här är min nya journal för Leapfrog-utveckling.

Jag försöker nu bygga på Mac (har lyckats på PC, Android och Linux (tror jag)). Det funkar men skärmen blir bara en fjärdedel när jag kör på Macen. Antagligen pga retinaskärm som har dubbel upplösning. (Antar att den har dubbel fysisk upplösning men vanlig logisk upplösning, dvs det är en skillnad på punkter och pixlar). 

Det finns en fix för detta i en senare SDL. (Eller hur: Japp, även om den senaste libsdl-org/SDL har ytterligare senare fixar.)

Så, kan jag använda senaste SDL för Leapfrog? Hur byggar jag det? Jag antar att det kommer skita sig när man kombinerar oxygine med senaste SDL. Kanske kan jag uppdatera oxygine så det matchar senaste SDL? 

Så, hur bygger jag? Hur används oxygine i Leapfrog? Oxygine byggs som ett lib: leapfrog-game/bin/oxygine-d.lib för debug eller oxygine.lib för release. Så vem byger oxygine-libbet? Följer detta med installationen? Nej, förstås inte. Det finns ett projekt som måste byggas. Det heter oxygine. 

Oxygine byggs som ett lib som i sin tur använder andra lib (några av dessa finns projekt i oxygine):
                     projekt    dll
libcurl_imp.lib                  x 
ws2_32.lib
libjpeg.lib             x        
libpng.lib              x
zlib.lib                x        x  
opengl32.lib
pthreadVCE2.lib                  x
SDL2.lib                x
SDL2main.lib            x

De övriga måste ingå i repot. Stämmer detta? 

Oxygine hittar sina lib här:
..\..\..\oxygine-framework\oxygine\third_party\win32\libraries - libcurl_imp.lib, libjpeg.lib, libpng.lib, libzlib.lib, pthreadVCE2.lib. Jag har dessutom byggt zlib.lib här. 
..\..\..\oxygine-framework\libs - Här finns sdl2.dll och SDL2.lib/SDL2main.lib.

I leapforg-game/data finns följande dll:er:
libcurl.dll
libeay32.dll
libssh2.dll
pthreadVCE2.dll
SDL2.dll
ssleay32.dll
zlib.dll

Hämtade senaste SDL, valde branch SDL2. Byggde för både debug och release, båda fungerade. Hämtade senaste oxygine. Byggde och fick några fel. Skall se om jag kan fixa dem.
Error: unresolved external symbol __imp__fprintf
Löstes med följande länk, la till legacy_stdio_definitions.lib i Properties/Librarian/General/Additional Dependencies enligt följande länk: https://stackoverflow.com/questions/30412951/unresolved-external-symbol-imp-fprintf-and-imp-iob-func-sdl2
Löste bara två errors, följande kvarstod. Provade att ändra i Properties/C++/Code generation/Runtime libraries/MD till MT -> funkade ännu sämre
Error: unresolved external symbol __imp____iob_func
För detta behövde jag lägga till följande kod i main.cpp
FILE _iob[] = { *stdin, *stdout, *stderr };
extern "C" FILE * __cdecl __iob_func(void)
{
   return _iob;
}
Näst fel:
unresolved external symbol __imp__CommandLineToArgvW@8
Löste sig med att lägga till Shell32.lib i Linker/General/additoinal dependencies.

Gick att bygga men inte köra. Kanske måste fler bibliotek (som är förkompilerade i oxygine) byggas för rätt version av VS. Jag har projekt för zlib, png och jpeg men vet inte var jag fått dem ifrån. Från GITHUB såklart. 
libjpeg: Hittar inte en xcproj-fil i den. 

Okej, det är uppenbart att jag har gjort det här jobbet förut. Jag har antaligen byggt alla lib för vs2019. Så jag borde kunna använda mina existerande projekt. Alltså borde jag testa att bygga leapfrog från scratch men med senaste SDL2.
Risken är nu att jag bygger ny version av SDL2 men med äldre projektfil. Kanske behöver projektfilen uppdateras enligt senaste SDL. Okej, men jag har antagligen (tidigare) kopierat SDL-projekten och gjort om dem så de bygger dll-erna och sparar dem på rätt ställe. Istället för att kopiera dem. Jag borde istället använda SDL's egna projekt och kopiera dem till rätt plats med ett post-build tool (bat-fil typ).
libjpeg och libpng verkar jag ändrat till att vara statiska lib (istället för dll:er). Fine. 
Så, med png och jpeg byggda från sina repon med projektfiler i leapfrog, men med SDL2.dll byggd från SDL's senaste repo, och kopierat dll-filen till rätt ställe, så funkade det!!

Jag borde göra en readme för hur man installerar byggmiljön och lägga till automatiska koperingar av dll:er till leapfrog-game/data. Det får bli senare. Fixat nu!

Tillbaka till mac-världen. Jag vill nu bygga leapfrog med nya SDL, men jag klantade mig på något sätt och har förlorat länken till SDL i projektet. Det bästa är att återskapa projektet och dokumenter här hur jag gjorde det, om jag behöver göra det igen. Så jag börjar på ny kula.
 
I macen, på oxygine-framework/tools: kör följande:
python3 gen_template.py Leapfrog -t macosx -d ../../leapfrog/leapfrog-game/proj.macosx

Öppna projektet i xcode. lägg till kodfiler, (använd med "Create Groups"):
leapfrog\leapfrog-game\src
Box2D\Box2D
lua (alla .c och .h filer MEN inte lua.c som innehåller en main-fil)

I Leapfrog_macosx: Build Settings/SearchPaths/Header Search Paths: Lägg till ../../../Box2d och ../../../lua

I Leapfrog_macosx/Supporting Files: Lägg till allt innehåll i leapfrog-game/data - denna gång med "Create folder references":

Build fail med unresolved symbols. En massa SDL-symboler saknas, typ CreateWindow. Kan detta ha med att jag kör en senare SDL? Vet faktiskt inte vad jag gjorde för att komma förbi detta. 

Men sedan kom ett nytt fel. Något om Sandbox inte hittade filen den sökte efter (kanske en .h-fil i en byggkatalog). I det läget bytte jag till gamla SDL. Då funkade det. Tillbaka till nya, samma fel. Jag behöver lösa det felet. Wow. Jag behövde gå in i SDL-projektet, välja target: Framework, Build Settings/Build Options/User Script Sandboxing, sätta till "No". Då löste det sig. Och problemet med upplösning OCH uppdatering fixade sig.

Ok, nu när det fungerad så behöver jag göra det från scratch igen. Låt oss skriva över första projektet och ta det från där.

Verkar ok, men jag behövde ändra include paths till lua-filerna (lua.hpp). Måste nog ändra på motsvarande sätt i windows. Det funkade!! Committar nu. 

Provade nu att hämta ut en fräsch repo-uppsättning och försökte bygga. Fick då ett nytt fel. Men det löste sig när jag valde rätt branch av SDL. Sedan funkade det.

Men inte ändå. Det är någon skillnad mellan (1) git-dummy och (2) git-leapfrogtest. Verkar som att git-dummy har kvar de gamla, leapfrog-projekten. 

Använder dem båda rätt projekt för SDL? Kolla i SLN:
(1): Ja, den använder den från SDL
(2): Japp

Kan det vara så att oxygine råkar läsa ett gammalt lib när det bygger? Från början hämtades libet från oxygine-framework/libs men nu skapas SDL i leapfrog\Win32\Release. Japp. Det är fixat och det får nu att bygga från git-dummy. Behövde ändra i oxygine-framework och leapfrog.

Allt bygger med den senaste incheckningen. Har gjort en fork av SDL som innehåller alla brancher och som funkar. Nu kör jag vidare med android. 

Gick att bygga men inte att installera på Lindas padda. Det var en för gammal version. Jag ändrade på tre ställen i filen: leapfrog-game/proj.android/build.gradle (android studio rödmarkerade dessa rader som en varning att de var för låga):

android {
    compileSdkVersion 31                                       <------ HÄR
    sourceSets {
        main {
            jniLibs.srcDirs = ['libs']
            manifest.srcFile 'AndroidManifest.xml'
            java.srcDirs = ['src']
            res.srcDirs = ['res']
            assets.srcDirs = ['../data']
        }
    }
    defaultConfig {
    	minSdkVersion 31                                         <------ HÄR
        targetSdkVersion 31                                    <------ HÄR
        ndk {
            abiFilters 'armeabi-v7a', 'arm64-v8a'
        }
        externalNativeBuild {
            ndkBuild {
                arguments 'NDK_MODULE_PATH+=../../../'
            }
        }
    }
    
MEN: I proj.android/AndroidManifest.xml står det <uses-sdk android:minSdkVersion="10" android:targetSdkVersion="29" /> (en rad som jag antagligen har ändrat förut). Skall inte denna också ha version 31? Nej, build.gradle överrider AndroidManifest och jag tog därför bort det från AndroidManifest.

För att bygga sedan, var jag tvungen att ladda ner SDK:n version 31 i Android Studio menyn: Tools/SDK Manager/ 
Nedladdningen skedde automatiskt när jag klickade i version 31. Behövde en ny version av java för att android studio skulle funka (antagligen pga de nya SDKn). Installerat.

Android studio gillade inte raden i main som las till för någon förändring i VS:    extern "C" { FILE __iob_func[3] = { *stdin,*stdout,*stderr }; }, så jag la in den i en #ifdef för windows.

Det verkar skita sig med android. Jag såg nu att det fanns nya commits för oxygine för android-spel. Jag behöver testa det, men först vill jag få igång emulatorer. Då behövde jag något som heter HAXM. Detta är installerat men inte enablat på min dator. Måste därför göra det i inställningar/Appar och funktioner/Program och funktioner/Aktivera eller inaktivera Windows-funktioner/ Men, vilka skall jag enabla. 
Enligt: https://stackoverflow.com/questions/67319710/how-to-enable-vmx-in-the-haxm-installation, så skall jag aktivera Hyper-V-grejor. Antar att detta är det som kallas för Windows-hypervisorplattform. Stämmer detta? Ja, fick igång emulatorn och kunde launcha appen på emulatorn. Fick sedan, vad jag bedömmer, exakt samma fel som på Lindas padda. 

Jag försöker nu använda senaste oxygine-framework för att göra ett nytt projekt.

Har nu uppdaterat till senaste oxygine. Stämmer det? Verkar så. Gör ett nytt projekt då:

Jag går till leapfrog/leapfrog-game och där kör jag:

python3 ..\..\oxygine-framework\tools\gen_template.py Leapfrog -t android -d proj.android2

Jag börjar med att försöka bygga med grundinställningarna och köra på en emulator som jag bygger för att matcha de inställningarna. Sedan tar jag det därifrån.

Först när jag öppnar projektet så vill den ändra till version 4.8 av Gradle Wrapper (från 4.6). Jag låter den göra det.

Fick det här meddelandet: cvc-complex-type.2.4.a: Ogiltigt inneh�ll hittades med b�rjan med elementet 'base-extension'. N�got av '{layoutlib}' f�rv�ntas. Vet inte vad det betyder. Ca 5 utskrifter av det. (antagligen XML-tolkning som blivit fel) Sedan står det "Gradle Sync Issues" Klickar man på det, står det: 
Gradle sync failed: Failed to find Build tools 28.0.3 // Install Build tools 28.0.3 and sync project // Upgrade plugin to version 7.3.1 and sync project
Jag kan klicka på båda de sista, för att utföra ändringarna. Klickade på den första, och det såg ut som om den även installerade 7.3.1 i samma veva.  
Fortfarande några XML-tolkningsfel (kanske färre), men även:
FAILURE: Build failed with an exception.
* Where:
Build file 'E:\git2\oxygine-framework\oxygine\SDL\android\extension\build.gradle' line: 14 (denna rad är namespace="org.oxygine.lib.extension"). Jag tror det fanns något om att namespace skulle anges på ett annat sätt...
* What went wrong:
A problem occurred evaluating project ':oxygine-extension'.
> Could not set unknown property 'namespace' for object of type com.android.build.gradle.LibraryExtension.
Så, hur fixade vi detta då? Släpper det för nu.

Gick tillbaka till Build Output rutan och klickade även på Upgrade plugin to version 7.3.1 and sync project.
Fick följande meddelande: 
[CXX5202] This app only has 32-bit [armeabi-v7a] native libraries. Beginning August 1, 2019 Google Play store requires that all apps that include native libraries must provide 64-bit versions. For more information, visit https://g.co/64-bit-requirement
Jag får hantera detta senare, arm64-v8a lib var bortkommenterat i gradle.build, om jag lägger till den så byggs även 64-bits-version. Jag kan tänka mig att meddellandet försvinner. 

[..] Fixa 64-bitars-version

Nu måste jag lägga till källkod och andra assets. 

Jag behövde redigera jni/src/Android.mk:

// Includes:
LOCAL_C_INCLUDES += $(LOCAL_PATH)/../../../../../Box2D/

// Källfiler
LOCAL_SRC_FILES += ../../../../../Box2D/Box2D/Collision/b2BroadPhase.cpp

BYgget går att bygga. Nu behöver jag en device som klarar den versionen API: 26.
Jag har byggt för arm, men devicen verker ha x86. Hittade en för arm64_v8a. (Oreo, api 26, arm64-v8a, Android 8 (Google API).

Running!! OOHUUII!

Precis som förut. FÖrsöker debugga nu. Tuffar på i början med javakod. Sedam i filen: OxygineActivity.java, rad 63, kallas onCreate (som antagligen överrider en befintlig onCreate), så tuffar det på till: 
super.onCreate(savedInstanceState);
Hoppar jag över den så går det till dissassembly. 
Går jag in så hamnar jag ii SDLActivity.java. 
Här görs några utskrifter som faktiskt kom ut när jag körde emulatorn (Device: ... och Model: ...). Men när jag går in i log-funktionen så tappas sync mellan kod och debugger. Source code does not match the byte code.
Tillbaka i SDLActivity.java: kör loadLibraries(). Den försöker ladda bibliotek "SDL2". Kollar om  ReLinker finns i projektet. Den verkar inte finnas och då försöker den ladda med System.loadLibrary("SDL2"). Där går vi in i disassembly. 

Okej, började om med ny approach: ANvänd branch 2024 av oxygine samt kopiera vissa java-filer från sdl/android till oxygine. Behövde version mindre än 11 av java. Trodde jag fixat det, men icke. Gick att välja i Settings/Build.../Gradle
Behövde sedan upgradera Gradle Plugin från 3.2.1 till 3.6.4, samt upgradera Gradle 
ndkVersion stämde inte, eller... ndkVersion var inte specat så någon generisk valdes, men den var inte installerad. Jag la själv till följande rad i build.gradle:
    ndkVersion "23.1.7779620"
Nu kunde jag inte bygga för jag hade fel jdk-version, eller något. Gick tillbaka till version 11.

Nästa fel: error: lambda expressions are not supported in -source 7  (use -source 8 or higher to enable lambda expressions)

Äntligen lyckades jag bygga demo-projektet och köra på emulator. Jag byggde med följande versioner och annat:

För att bygga användes JDK version 17.0.10 (GRADLE_LOCAL_JAVA_HOME).

Använde compileSdkVersion 26
minSdkVersion 21
targetSdkVersion 26
abiFilters 'armeabi-v7a', 'arm64-v8a', 'x86' (jag behöver bygga png-libbet för x86_64 om jag vill ha med det filtret)
gradle version: 8.4.2
ndk version: 26.1.10909125

Jag lyckade köra på emulator: 
Pixel XL API32 Android 12L x86_64 (trots att jag inte byggt för 64 bit)
Det verkar aldrig komma igång på Pixel Tablet API 26, men med debugger kommer den längre. Funkar i alla fall dåligt.

Äntligen lyckades jag bygga med ovanstående versioner, och det lyckades på en x86-telefon. Jag provar nu att öka till version (compileSdkeVersion) 34 (från 26)

Och med en fix för att få det kompatibelt, behövde lägga till någon "android:exported="true" för MainActivity i AndroidManifest.xml, så funkade även det och då gick det att köra på Lindas padda. Yippiii!

Skall försöka komma ihåg stegen som jag gjorde.

Checkade ut branch 2024 (skall göra den till min fork) av oxygine-framework. Jag tog senaste versionen av SDL med branch SDL2. Jag kopierade en all java-kod från SDL\android-project\app\src\main\java\org\libsdl\app till oxygine-framework\oxygine\SDL\android\lib\src\org\libsdl\app

Jag generareade ett nytt projekt från build-skripten. I leapfrog-game-katalogen körde jag:
python3 ..\..\oxygine-framework\tools\gen_template.py Leapfrog -t android -d proj.android

Jag använde senaste android-studio. 
- För att bygga användes JDK version 17.0.10 (GRADLE_LOCAL_JAVA_HOME).
- Använde compileSdkVersion 34 
- minSdkVersion 21
- targetSdkVersion 33 (var tvungen att byga koden från [compileSdkVersion 34] till [defaultConfig { compileSdk 34 }])
- abiFilters 'armeabi-v7a', 'arm64-v8a', 'x86' (jag behöver bygga png-libbet för x86_64 om jag vill ha med det filtret)
- gradle version: 8.4.2
- ndk version: 26.1.10909125

Jag fick ett error på en symbol som inte finns: BLUETOOTH_CONNECT, så jag kommenterade bort 362-366 av oxygine-framework\oxygine\SDL\android\lib\src\org\libsdl\app\HIDDeviceManager.java, kanske skiter det sig om jag måste använda bluetooth.

Jag tror det var det hela. Skall lägga till och committa nu.

[ok] Bygg för relase
[ok] Fixa splashscreen
[ok] Fixa ikoner
[..] Bygga x86_64
[ok] Sätt override på doUpdate för att bli av med många varningar

Splash screen: Det var inte att jag hade en pekare som dog. Men jag får något felmeddellande. Jag bör kolla om det försvinner när jag inte kör splashscreen.

I ovanstående process har jag ändrat i filer i oxygine-framework. T ex ändrade jag i någon java-fil. Dessutom ändrade jag namespace (eller liknande) från typ: oxygine_lib till oxygine.lib. Detta behöver committas, och då in i min fork. Jag behöver därför klona oxygine-framework från min fork och kopiera in det från git2. Sedan committa igen. Min fork blir då den riktiga som jag använder. Om det senare kommer en uppdatering från oxygine, så får jag merga in den i min fork.

Kanske är det bra att se vilka filer jag har ändrat i min fork:
commit   Filer ändrade                                                        Ändringar                     Kommentar
6264a39  oxygine/SDL/win32/oxygine.vcxproj                                    windows target platform       Ej relevant
4675c97  oxygine/SDL/android/lib/src/org/oxygine/lib/OxygineActivity.java     Hiding navigation bar         Relevant
00284ee  Massa filer                                                          Merge master                  Ej relevant, görs ändå
28a963d  Som ovan

Men hur är det då med OxygineActivity.java. Den är inte ändrad på 9 år. Min ändring gäller därför fortfarande. Så, jag borde 
kopiera undan min version av oxygine-framework.
Göra om fork:en till att peka på 2024-branchen. 
Clona ut min nya fork
KOpiera in min sparade version. 
Commita
Biff!!




















